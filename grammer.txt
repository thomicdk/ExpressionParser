expression
 = or_expression

or_expression 
 = or_expression "OR" and_expression
 / and_expression
 
and_expression 
 = and_expression "AND" equality_expression 
 / equality_expression

equality_expression
 = equality_expression "==" relational_expression
 / equality_expression "!=" relational_expression
 / relational_expression
 
relational_expression
 / relational_expression "<"  additive_expression
 / relational_expression "<=" additive_expression
 / relational_expression ">"  additive_expression
 / relational_expression ">=" additive_expression
 / additive_expression

additive_expression
 = additive_expression "+" multiplicative_expression
 / additive_expression "-" multiplicative_expression 
 / multiplicative_expression

multiplicative_expression
 = multiplicative_expression "*" unary_expression
 / multiplicative_expression "/" unary_expression
 / multiplicative_expression "%" unary_expression
 / unary_expression

unary_expression
 = "+" unary_expression
 / "-" unary_expression
 / "!" unary_expression
 / atom
 
atom
 = "(" expression ")"
 / function_call 
 / string
 / real_number
 / integer
 / boolean

function_call
 = identifier "(" function_arguments? ")"
 / identifier

function_arguments
 = expression "," function_arguments
 / regex_pattern "," function_arguments
 / expression
 / regex_pattern
 
regex_pattern
 = "/" REGEX "/"
 
 
string
 = "\"" [^"]* "\""

integer
 = [0-9]+

real_number
 = integer "." integer?
 / "." integer
 
boolean
 = "TRUE"
 / "FALSE"
 

-------------------------------------------------------------
Property Path
-------------------------------------------------------------
Path 
	=	Property "." Path
	/ Property

Property
	=	PropertyName ArrayIndex
	/	PropertyName

PropertyName
	= [A-Za-z][A-Za-z0-9_]*
	
ArrayIndex
	= "[" (0|[1-9][0-9]*) "]"


 
 
